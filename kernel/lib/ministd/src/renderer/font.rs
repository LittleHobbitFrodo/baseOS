//	renderer/font.rs (ministd crate)
//	this file originally belonged to baseOS project
//		an OS template on which to build


//  This file provides simple 8x8 font for the renderer
//  You can change the font
//  NOTE: the font contains only printable characters (according to the ASCII table)


use crate::mem::RoSync;

pub const FONT_BITS: usize = 8;
pub const PLACE_SUB: usize = 31;
pub const FONT_SIZE: usize = 96;
pub type FontChar = [u8; FONT_BITS];
pub struct Font([FontChar; FONT_SIZE]);


impl Font {
    #[inline(always)]
    pub fn get_char(&self, i: u8) -> &FontChar {
        &self.0[i as usize - PLACE_SUB as usize]
    }
}



pub static FONT: RoSync<Font> = RoSync::new(Font {0: [
    /*each bit is one pixel, set bits will be drawn*/
    /*null byte*/[0, 0, 0, 0, 0, 0, 0, 0],
    /*space*/[0, 0, 0, 0, 0, 0, 0, 0],
    /* ! */[0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0, 0b00100000],
    /*"*/[0b01010000, 0b01010000, 0, 0, 0, 0, 0, 0],
    /*#*/[0b00100100, 0b00100100, 0b11111111, 0b00100100, 0b00100100, 0b11111111, 0b00100100, 0b00100100],
    /*$*/[0b00111100, 0b01011000, 0b01011000, 0b00111100, 0b00011010, 0b00011010, 0b01011010, 0b00111100],
    /*%*/[0b00000100, 0b10001000, 0b00001000, 0b00010000, 0b00010000, 0b00100000, 0b00100010, 0b01000000],
    /*&*/[0b00011100, 0b00110110, 0b00011100, 0b00111011, 0b01110110, 0b11011100, 0b11001100, 0b01110110],
    /*'*/[0b00010000, 0b00010000, 0, 0, 0, 0, 0, 0],
    /*(*/[0b00010000, 0b00100000, 0b01000000, 0b01000000, 0b01000000, 0b01000000, 0b00100000, 0b00010000],
    /*)*/[0b00001000, 0b00000100, 0b00000010, 0b00000010, 0b00000010, 0b00000010, 0b00000100, 0b00001000],
    /***/[0, 0b00101000, 0b00010000, 0b00101000, 0, 0, 0, 0],
    /*+*/[0, 0b00010000, 0b00010000, 0b01111100, 0b00010000, 0b00010000, 0, 0],
    /*,*/[0, 0, 0, 0, 0, 0, 0b01000000, 0b01000000],
    /*-*/[0, 0, 0, 0, 0b00111100, 0, 0, 0],
    /*.*/[0, 0, 0, 0, 0, 0, 0, 0b01000000],
/*/ */[0b00000100, 0b00001000, 0b00001000, 0b00010000, 0b00010000, 0b00100000, 0b00100000, 0b01000000],
/*0*/[0b00111000, 0b01000100, 0b01000100, 0b01010100, 0b01010100, 0b01000100, 0b01000100, 0b00111000],
/*1*/[0b00010000, 0b00110000, 0b01010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b01111100],
/*2*/[0b00111000, 0b01000100, 0b00000100, 0b00000100, 0b00001000, 0b00010000, 0b00100000, 0b01111100],
/*3*/[0b00111000, 0b01000100, 0b00000100, 0b00011000, 0b00000100, 0b00000100, 0b01000100, 0b00111000],
/*4*/[0b00000100, 0b000001000, 0b000010000, 0b000100000, 0b011111100, 0b000001000, 0b000001000, 0b000001000],
/*5*/[0b01111110, 0b01000000, 0b01000000, 0b01111100, 0b00000010, 0b00000010, 0b01000010, 0b00111100],
/*6*/[0b00011110, 0b00100000, 0b01000000, 0b01111100, 0b01000010, 0b01000010, 0b01000010, 0b00111100],
/*7*/[0b01111110, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00100000, 0b01000000, 0b01000000],
/*8*/[0b00111100, 0b010000010, 0b010000010, 0b001111100, 0b010000010, 0b010000010, 0b010000010, 0b001111100],
/*9*/[0b00111100, 0b01000010, 0b01000010, 0b00111110, 0b00000010, 0b00000010, 0b01000010, 0b00111100],
/*:*/[0, 0, 0b00100000, 0, 0, 0, 0b00100000, 0],
/*;*/[0, 0, 0b00100000, 0, 0b00100000,0b00100000, 0b01000000, 0],
/*<*/[0, 0, 0b00001000, 0b00110000, 0b01000000, 0b00110000, 0b00001000, 0],
/*=*/[0, 0, 0b01111100, 0, 0b01111100, 0, 0, 0],
/*>*/[0, 0, 0b00010000, 0b00001100, 0b00000010, 0b00001100, 0b00010000, 0],
/*?*/[0b00111000, 0b01000100, 0b00000100, 0b00001000, 0b00010000, 0b00010000, 0, 0b00010000],
/*@*/[0b00111000, 0b01000100, 0b00000100, 0b01010010, 0b01010010, 0b01001100, 0b01000000, 0b00111110],
/*A*/[0b00111000, 0b01000100, 0b01000100, 0b01111100, 0b01000100, 0b01000100, 0b01000100, 0b01000100],
/*B*/[0b01111000, 0b01000100, 0b01000100, 0b01001000, 0b01000100, 0b01000100, 0b01000100, 0b01111000],
/*C*/[0b00111000, 0b01000100, 0b01000000, 0b01000000, 0b01000000, 0b01000000, 0b01000100, 0b00111000],
/*D*/[0b01111000, 0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b01111000],
/*E*/[0b01111000, 0b01000000, 0b01000000, 0b01111000, 0b01000000, 0b01000000, 0b01000000, 0b01111000],
/*F*/[0b01111000, 0b01000000, 0b01000000, 0b01110000, 0b01000000, 0b01000000, 0b01000000, 0b01000000],
/*G*/[0b00111000, 0b01000100, 0b01000000, 0b01011100, 0b01000100, 0b01000100, 0b01000100, 0b00111000],
/*H*/[0b01000010, 0b01000010, 0b01000010, 0b01111110, 0b01000010, 0b01000010, 0b01000010, 0b01000010],
/*I*/[0b00111000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00111000],
/*J*/[0b00111100, 0b00000100, 0b00000100, 0b00000100, 0b00000100, 0b00000100, 0b00100100, 0b00011100],
/*K*/[0b01000100, 0b01001000, 0b01010000, 0b01100000, 0b01010000, 0b01001000, 0b01000100, 0b01000100],
/*L*/[0b01000000, 0b01000000, 0b01000000, 0b01000000, 0b01000000, 0b01000000, 0b01000000, 0b01111000],
/*M*/[0b01000100, 0b01101100, 0b01010100, 0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b01000100],
/*N*/[0b01000100, 0b01100100, 0b01010100, 0b01001100, 0b01000100, 0b01000100, 0b01000100, 0b01000100],
/*O*/[0b00111000, 0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b00110000],
/*P*/[0b01111000, 0b01000100, 0b01000100, 0b01111000, 0b01000000, 0b01000000, 0b01000000, 0b01000000],
/*Q*/[0b00111000, 0b01000100, 0b01000100, 0b01000100, 0b01010100, 0b01001100, 0b00111100, 0b00000110],
/*R*/[0b01111000, 0b01000100, 0b01000100, 0b01111000, 0b01000100, 0b01000100, 0b01000100, 0b01000100],
/*S*/[0b00111000, 0b01000100, 0b01000000, 0b00111000, 0b00000100, 0b00000100, 0b01000100, 0b00111000],
/*T*/[0b01111100, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000],
/*U*/[0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b00111000],
/*V*/[0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b00101000, 0b00101000, 0b00010000],
/*W*/[0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b01010100, 0b01101100, 0b01000100],
/*X*/[0b01000100, 0b01000100, 0b00101000, 0b00010000, 0b00101000, 0b00101000, 0b01000100, 0b01000100],
/*Y*/[0b01000100, 0b01000100, 0b01000100, 0b00111100, 0b00000100, 0b00000100, 0b01000100, 0b00111000],
/*Z*/[0b01111100, 0b00001000, 0b00001000, 0b00010000, 0b00010000, 0b00100000, 0b00100000, 0b01111110],
/*[*/[0b00111000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00111000],
/*\*/[0b01000000, 0b00100000, 0b00100000, 0b00010000, 0b00010000, 0b00001000, 0b00001000, 0b00000100],
/*]*/[0b00011100, 0b00000100, 0b00000100, 0b00000100, 0b00000100, 0b00000100, 0b00000100, 0b00011100],
/*^*/[0b00010000, 0b00101000, 0, 0, 0, 0, 0, 0],
/*_*/[0, 0, 0, 0, 0, 0, 0, 0b01111100],
/*`*/[0b00100000, 0b00010000, 0, 0, 0, 0, 0, 0],
/*a*/[0, 0, 0, 0b00111000, 0b01000100, 0b01000100, 0b01000100, 0b00111100],
/*b*/[0b01000000, 0b01000000, 0b01000000, 0b01111000, 0b01000100, 0b01000100, 0b01000100, 0b00111000],
/*c*/[0, 0, 0, 0b00111000, 0b01000000, 0b01000000, 0b01000000, 0b00111000],
/*d*/[0b00000010, 0b00000010, 0b00000010, 0b00011110, 0b00100010, 0b00100010, 0b00100010, 0b00011110],
/*e*/[0, 0, 0, 0b00111000, 0b01000100, 0b01111000, 0b01000000, 0b00111000],
/*f*/[0, 0, 0b00111000, 0b01000000, 0b01110000, 0b01000000, 0b01000000, 0b01000000],
/*g*/[0, 0, 0b00111100, 0b01000100, 0b01000100, 0b00111100, 0b00000100, 0b00111000],
/*h*/[0b01000000, 0b01000000, 0b01000000, 0b01111000, 0b01000100, 0b01000100, 0b01000100, 0b01000100],
/*i*/[0, 0b00100000, 0, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000],
/*j*/[0, 0b00000100, 0, 0b00000100, 0b00000100, 0b00000100, 0b01000100, 0b00111000],
/*k*/[0b01000000, 0b01000000, 0b01000000, 0b01001000, 0b01110000, 0b01001000, 0b01001000, 0b01001000],
/*l*/[0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000],
/*m*/[0, 0, 0, 0b01111000, 0b01010100, 0b01010100, 0b01000100, 0b01000100],
/*n*/[0, 0, 0, 0b01111000, 0b01000100, 0b01000100, 0b01000100, 0b01000100],
/*o*/[0, 0, 0, 0b00111000, 0b01000100, 0b01000100, 0b01000100, 0b00111000],
/*p*/[0, 0, 0b01111000, 0b01000100, 0b01000100, 0b01111000, 0b01000000, 0b01000000],
/*q*/[0, 0b00111000, 0b01000100, 0b01000100, 0b01000100, 0b00111100, 0b00000101, 0b00000110],
/*r*/[0, 0, 0, 0b01111000, 0b01000100, 0b01000000, 0b01000000, 0b01000000],
/*s*/[0, 0, 0, 0b00111100, 0b01000000, 0b00111000, 0b00000100, 0b01111000],
/*t*/[0b01000000, 0b01000000, 0b01000000, 0b01111000, 0b01000000, 0b01000000, 0b01000000, 0b00111000],
/*u*/[0, 0, 0, 0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b00111100],
/*v*/[0, 0, 0, 0b01000100, 0b01000100, 0b01000100, 0b00101000, 0b00010000],
/*w*/[0, 0, 0, 0b01000100, 0b01000100, 0b01010100, 0b01010100, 0b00111000],
/*w*/[0, 0, 0, 0b01000100, 0b00101000, 0b00010000, 0b00101000, 0b01000100],
/*y*/[0, 0, 0b01000100, 0b01000100, 0b00111100, 0b00000100, 0b01000100, 0b00111000],
/*z*/[0, 0, 0, 0b01111100, 0b00001000, 0b00010000, 0b00100000, 0b01111100],
/*{*/[0b00000100, 0b00001000, 0b00001000, 0b00010000, 0b00001000, 0b00001000, 0b00001000, 0b00000100],
/*|*/[0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000],
/*]*/[0b00100000, 0b00010000, 0b00010000, 0b00001000, 0b00010000, 0b00010000, 0b00010000, 0b00100000],
/*~*/[0, 0, 0b00110100, 0b01011000, 0, 0, 0, 0],]});

